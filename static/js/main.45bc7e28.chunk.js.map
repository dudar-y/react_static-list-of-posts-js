{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","length","map","id","PostInfo","post","title","PostList","data","postsFromServer","postId","commentsFromServer","filter","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,eAED,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,WCPCC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKL,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCK,EAAQF,OAE9C,OAED,mBACEH,UAAU,qBACVC,KAAI,iBAAYI,EAAQH,OAF1B,SAIGG,EAAQH,WAIb,qBAAKF,UAAU,oBAAf,SAAoCK,EAAQC,WCZnCC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKR,UAAU,cAAf,SACIQ,EAASC,OAEPD,EAASE,KAAI,SAAAL,GAAO,OACpB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQM,OAF5C,mBAAG,UAAQ,oBAAX,iCCFKC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKb,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGa,EAAKC,QAER,cAAC,EAAD,CAAUf,KAAMc,EAAKd,UAGvB,mBAAGC,UAAU,iBAAb,SACGa,EAAKP,OAGR,cAAC,EAAD,CAAaE,SAAUK,EAAKL,eCfnBO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAKN,KAAI,SAAAG,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCWtC,IAAMK,EAAOC,EAAgBP,KAAI,SAAAG,GAAI,kCAChCA,GADgC,IAEnCL,UAN2BU,EAMGL,EAAKF,GAL5BQ,EAAmBC,QAAO,SAAAf,GAAO,OAAIA,EAAQa,SAAWA,MAM/DnB,MAZmBsB,EAYDR,EAAKQ,OAXhBC,EAAgBC,MAAK,SAAAxB,GAAI,OAAIA,EAAKY,KAAOU,MACzC,QAFT,IAAqBA,EAKQH,KAUhBM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,KAAMA,QCrBpBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.45bc7e28.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{comment.body}</div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {!comments.length\n      ? <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      : comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))}\n  </div>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n      <UserInfo user={post.user} />\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <CommentList comments={post.comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ data }) => (\n  <div className=\"PostList\">\n    {data.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst data = postsFromServer.map(post => ({\n  ...post,\n  comments: getCommentsByPostId(post.id),\n  user: getUserById(post.userId),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList data={data} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}